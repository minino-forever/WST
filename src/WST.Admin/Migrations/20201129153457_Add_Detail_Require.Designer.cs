// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WST.Admin.Models;

namespace WST.Admin.Migrations
{
    [DbContext(typeof(WstDbContext))]
    [Migration("20201129153457_Add_Detail_Require")]
    partial class Add_Detail_Require
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("WST.Admin.Models.Breaking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Description");

                    b.Property<string>("RepairMethod");

                    b.HasKey("Id");

                    b.ToTable("Breaking");
                });

            modelBuilder.Entity("WST.Admin.Models.BreakingImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BreakingId");

                    b.Property<byte[]>("Image");

                    b.HasKey("Id");

                    b.HasIndex("BreakingId");

                    b.ToTable("BreakingImage");
                });

            modelBuilder.Entity("WST.Admin.Models.Detail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Amount");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Number")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Detail");
                });

            modelBuilder.Entity("WST.Admin.Models.ElectricLocomotive", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Modification")
                        .IsRequired();

                    b.Property<int>("PinCount");

                    b.Property<int>("Power");

                    b.Property<int>("SectionCount");

                    b.Property<string>("SerialNumber")
                        .IsRequired();

                    b.Property<string>("UniqueNumber")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ElectricLocomotive");
                });

            modelBuilder.Entity("WST.Admin.Models.ElectricLocomotiveBreakingProxy", b =>
                {
                    b.Property<Guid>("BreakingId");

                    b.Property<Guid>("ElectricLocomotiveId");

                    b.Property<Guid>("Id");

                    b.HasKey("BreakingId", "ElectricLocomotiveId");

                    b.HasIndex("ElectricLocomotiveId");

                    b.ToTable("ElectricLocomotiveBreakingProxy");
                });

            modelBuilder.Entity("WST.Admin.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Patronym");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WST.Admin.Models.BreakingImage", b =>
                {
                    b.HasOne("WST.Admin.Models.Breaking", "Breaking")
                        .WithMany()
                        .HasForeignKey("BreakingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WST.Admin.Models.ElectricLocomotiveBreakingProxy", b =>
                {
                    b.HasOne("WST.Admin.Models.Breaking", "Breaking")
                        .WithMany("LocomotiveBreakingProxies")
                        .HasForeignKey("BreakingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WST.Admin.Models.ElectricLocomotive", "ElectricLocomotive")
                        .WithMany("LocomotiveBreakingProxies")
                        .HasForeignKey("ElectricLocomotiveId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
